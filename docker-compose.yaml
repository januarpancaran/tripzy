services:
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql

  backend:
    build: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - mysql
    env_file:
      - ./backend/.env

  celery:
    build: ./backend
    command: ./wait-for-it.sh msyql:3306 -- celery -A core worker --loglevel=info
    volumes:
      - ./backend:/app
    depends_on:
      - mysql
      - redis
      - backend
    env_file:
      - ./backend/.env

  celery-beat:
    build: ./backend
    command: ./wait-for-it.sh mysql:3306 -- celery -A core beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/app
    depends_on:
      - mysql
      - redis
      - backend
    env_file: ./backend/.env

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - backend

volumes:
  mysql_data:
